{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","noteToChange","find","changedNote","updatedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","newNoteObject","date","Date","toISOString","Math","random","length","concat","placeholder","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8NAaeA,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UAAY,sBAAwB,iBAEvD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCU3B,EAfA,WAEb,OADiBK,IAAMC,IAHT,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD5BK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAIP,yBAAKb,UAAU,SACZa,ICQQC,EAfA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGC0ESC,EAhFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KA2ChBC,qBAAU,WACRC,IAECzB,MAAK,SAAA0B,GACJT,EAASS,QAEV,IAEH,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAArC,GAAI,OAAuB,IAAnBA,EAAKG,aAEhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAac,QAASc,IACtB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAAAtC,GAAI,OACnB,kBAAC,EAAD,CAAMuC,IAAKvC,EAAKc,GAAId,KAAMA,EAAMC,iBAAkB,kBA1C/B,SAACa,GAC1B,IAAM0B,EAAef,EAAMgB,MAAK,SAAAzC,GAAI,OAAIA,EAAKc,KAAOA,KAC9C4B,EAAW,2BAAOF,GAAP,IAAqBrC,WAAYqC,EAAarC,YAC/D+B,EACUpB,EAAI4B,GACXjC,MAAK,SAAAkC,GACJjB,EAASD,EAAMa,KAAI,SAAAtC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO2C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OAAUQ,EAAanC,QAAvB,sCACfyC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAArC,GAAI,OAAIA,EAAKc,KAAOA,SA6BgBiC,CAAmB/C,EAAKc,WAGpF,0BAAMkC,SA7DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAgB,CACpB9C,QAASsB,EACTyB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,GAC3B1C,GAAIW,EAAMgC,OAAS,GAErBvB,EACUiB,GACP1C,MAAK,SAAAkB,GACJD,EAASD,EAAMiC,OAAO/B,IACtBC,EAAW,SAkDX,2BACE+B,YAAY,sBACZC,MAAOjC,EACPkC,SAhCiB,SAACZ,GACxBrB,EAAWqB,EAAMa,OAAOF,UAiCpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MC5ENC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c5efe18d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n  const label = note.important ? 'make note important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request =  axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div> \n  )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notificaion from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const newNoteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < .5,\n      id: notes.length + 1\n    }\n    noteService\n      .create(newNoteObject)\n      .then(newNote => {\n        setNotes(notes.concat(newNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const noteToChange = notes.find(note => note.id === id)\n    const changedNote = {...noteToChange, important: !noteToChange.important}\n    noteService\n      .update(id, changedNote)\n      .then(updatedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : updatedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Note '${noteToChange.content}' was already removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(note => note.id !== id))\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n  \n  useEffect(() => {\n    noteService\n    .getAll()\n    .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n  \n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notificaion message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          placeholder='Enter a new note...'\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type='submit'>save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}